{"version":3,"sources":["components/SideBar.js","components/Header.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","services/vendorService.js","pages/VendorForm.js","components/PageHeader.js","components/useTable.js","components/Popup.js","components/controls/Notification.js","components/controls/ConfirmDialog.js","pages/VendorData.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","sideMenu","color","display","flexDirection","position","left","width","height","backgroundColor","title","textAlign","fontSize","props","classes","className","root","Avatar","alt","src","style","marginLeft","Box","bgcolor","Container","maxWidth","Grid","container","spacing","item","xs","sm","borderBottom","IconButton","aria-label","marginBottom","Link","href","useStyles","makeStyles","theme","searchInput","opacity","padding","marginRight","Header","AppBar","Toolbar","alignItems","InputBase","placeholder","startAdornment","margin","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","name","value","error","onChange","other","TextField","variant","helperText","Select","options","FormControl","InputLabel","MenuItem","map","id","FormHelperText","Checkbox","FormControlLabel","control","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","ActionButton","children","Form","autoComplete","KEYS","insertVendor","data","vendors","getAllVendor","localStorage","getItem","setItem","parseInt","toString","generateVendorId","push","JSON","stringify","parse","departments","x","department","departmentId","initialFValues","vendorName","applicationName","email","mobile","city","joiningDate","Date","isPermanent","VendorForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","test","length","setErrors","Object","every","validateOnChange","useState","setValues","errors","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","justify","type","pageHeader","pageIcon","pageTitle","paddingLeft","PageHeader","subTitle","icon","Paper","elevation","square","Card","Typography","component","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","paper","DialogTitle","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","dialogContent","dialogAction","justifyContent","titleIcon","ConfirmDialog","confirmDialog","setConfirmDialog","disableRipple","DialogActions","onConfirm","pageContent","newButton","right","VendorData","setRecordForEdit","vendorService","setRecords","items","setFilterFn","onDelete","filter","InputProps","InputAdornment","fullName","toLowerCase","includes","startIcon","TableBody","openInPopup","vendor","recordIndex","findIndex","createMuiTheme","overrides","MuiAppBar","transform","MuiIconButton","appMain","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.139d5243.chunk.js","sourcesContent":["import React from 'react'\r\nimport { IconButton, withStyles } from \"@material-ui/core\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n// import CopyrightIcon from '@material-ui/icons/Copyright';\r\n// withStyles & makeStyles\r\n\r\nconst style = {\r\n    sideMenu: {\r\n        color: '#fff',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        left: '0px',\r\n        width: '320px',\r\n        height: '100%',\r\n        backgroundColor: '#060a28'\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        fontSize: '10px'\r\n    }\r\n\r\n}\r\n\r\nconst SideBar = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n\r\n        <div className={classes.sideMenu}>\r\n\r\n            <div className={classes.root}>\r\n                <Avatar alt=\"Company Logo\" src=\"/static/images/avatar/1.jpg\" style={{ backgroundColor: \"lightblue\", height: \"115px\", width: \"115px\", marginLeft: \"92px\" }} />\r\n\r\n            </div>\r\n            <div className={classes.title}>\r\n                <h1>Software Hub Solutions</h1>\r\n                <h5>Your Vision Our Future</h5>\r\n            </div>\r\n            <Box bgcolor=\"text.secondary\" color=\"white\">\r\n                <Container maxWidth=\"lg\">\r\n                    <Grid container spacing={5}>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Box borderBottom={1}>Contact</Box>\r\n                            <Box>\r\n                                <IconButton aria-label=\"add to favorites\" style={{ color: '#5d6566', fontSize: '12px', marginBottom: '-23px' }}>\r\n                                    <LocationOnIcon /> Chandigarh,Punjab\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"add to favorites\" style={{ color: '#5d6566', fontSize: '12px', marginBottom: '-23px' }}>\r\n                                    <PhoneIcon /> 8677899000\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"add to favorites\" style={{ color: '#5d6566', fontSize: '12px' }}>\r\n                                    <MailIcon />axyz@gmail.com\r\n                                </IconButton>\r\n                            </Box>\r\n\r\n                            <Box borderBottom={1}>Follow Us</Box>\r\n                            <Box>\r\n                                <Link href=\"/\" color=\"inherit\">\r\n                                    <IconButton aria-label=\"add to favorites\" style={{ color: '#4267B2', fontSize: '12px' }}>\r\n                                        <FacebookIcon />\r\n                                    </IconButton>\r\n                                </Link>\r\n                                <Link href=\"/\" color=\"inherit\">\r\n                                    <IconButton aria-label=\"add to favorites\" style={{ color: '#1DA1F2', fontSize: '12px' }}>\r\n                                        <TwitterIcon />\r\n                                    </IconButton>\r\n                                </Link>\r\n                                <Link href=\"/\" color=\"inherit\">\r\n                                    <IconButton aria-label=\"add to favorites\" style={{ color: '#C13584', fontSize: '12px' }}>\r\n                                        <InstagramIcon />\r\n                                    </IconButton>\r\n                                </Link>\r\n                                <Link href=\"/\" color=\"inherit\">\r\n                                    <IconButton aria-label=\"add to favorites\" style={{ color: '#0088cc', fontSize: '12px' }}>\r\n                                        <TelegramIcon />\r\n                                    </IconButton>\r\n                                </Link>\r\n                            </Box>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n\r\n            </Box>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n// HIGHER ORDER FUNCTIONS -> \"withStyles(style)\"- passed this function with (SideBar) parameter\r\nexport default withStyles(style)(SideBar);\r\n","import React from 'react'\r\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, makeStyles } from '@material-ui/core'\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'rgb(158, 224, 235)',\r\n\r\n    },\r\n\r\n    searchInput: {\r\n        opacity: '0.8',\r\n        padding: `0px ${theme.spacing(1)}px`,\r\n        fontSize: '0.8rem',\r\n        '&:hover': {\r\n            backgroundColor: '#f2f2f2'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function Header() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\" className={classes.root}>\r\n            <Toolbar>\r\n                <Grid container\r\n                    alignItems=\"center\">\r\n                    <Grid item>\r\n                        <InputBase\r\n                            placeholder=\"Search topics\"\r\n                            className={classes.searchInput}\r\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm></Grid>\r\n                    <Grid item>\r\n                        <IconButton title=\"Admin Login\">\r\n                            <PowerSettingsNewIcon\r\n                                fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    label: {\r\n        textTransform: 'none'\r\n    }\r\n}))\r\n\r\nexport default function Button(props) {\r\n\r\n    const { text, size, color, variant, onClick, ...other } = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant={variant || \"contained\"}\r\n            size={size || \"large\"}\r\n            color={color || \"primary\"}\r\n            onClick={onClick}\r\n            {...other}\r\n            classes={{ root: classes.root, label: classes.label }}>\r\n            {text}\r\n        </MuiButton>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 0,\r\n        margin: theme.spacing(0.5)\r\n    },\r\n    secondary: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.secondary.main,\r\n        }\r\n    },\r\n    primary: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        '& .MuiButton-label': {\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}))\r\n\r\nexport default function ActionButton(props) {\r\n\r\n    const { color, children, onClick } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={`${classes.root} ${classes[color]}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n","import Input from \"./Input\";\r\nimport Select from \"./Select\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport Button from \"./Button\";\r\nimport ActionButton from \"./ActionButton\";\r\n\r\nconst Controls = {\r\n    Input,\r\n    Select,\r\n    Checkbox,\r\n    DatePicker,\r\n    Button,\r\n    ActionButton\r\n}\r\n\r\nexport default Controls;","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function Input(props) {\r\n\r\n    const { name, label, value,error=null, onChange, ...other } = props;\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error:true,helperText:error})}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\r\n\r\nexport default function Select(props) {\r\n\r\n    const { name, label, value,error=null, onChange, options } = props;\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\"\r\n        {...(error && {error:true})}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                label={label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {\r\n                    options.map(\r\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                    )\r\n                }\r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\r\n\r\nexport default function Checkbox(props) {\r\n\r\n    const { name, label, value, onChange } = props;\r\n\r\n\r\n    const convertToDefEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormControlLabel\r\n                control={<MuiCheckbox\r\n                    name={name}\r\n                    color=\"primary\"\r\n                    checked={value}\r\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\r\n                />}\r\n                label={label}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nexport default function DatePicker(props) {\r\n\r\n    const { name, label, value, onChange } = props\r\n\r\n\r\n    const convertToDefEventPara = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\r\n                label={label}\r\n                format=\"MMM/dd/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                onChange={date => onChange(convertToDefEventPara(name, date))}\r\n\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nexport function useForm(initialFValues, validateOnChange = false, validate) {\r\n\r\n\r\n    const [values, setValues] = useState(initialFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFValues);\r\n        setErrors({})\r\n    }\r\n\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n\r\n    }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '80%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props) {\r\n\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\" {...other} >\r\n            {props.children}\r\n        </form>\r\n    )\r\n}\r\n\r\n","const KEYS = {\r\n    vendors: 'vendors',\r\n    vendorId: 'vendorId'\r\n}\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertVendor(data) {\r\n    let vendors = getAllVendor();\r\n    data['id'] = generateVendorId()\r\n    vendors.push(data)\r\n    localStorage.setItem(KEYS.vendors, JSON.stringify(vendors))\r\n}\r\n\r\nexport function updateVendor(data) {\r\n    let vendors = getAllVendor();\r\n    let recordIndex = vendors.findIndex(x => x.id === data.id);\r\n    vendors[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.vendors, JSON.stringify(vendors));\r\n}\r\n\r\nexport function deleteVendor(id) {\r\n    let vendors = getAllVendor();\r\n    vendors = vendors.filter(x => x.id !== id)\r\n    localStorage.setItem(KEYS.vendors, JSON.stringify(vendors));\r\n}\r\n\r\nexport function generateVendorId() {\r\n    if (localStorage.getItem(KEYS.vendorId) == null)\r\n        localStorage.setItem(KEYS.vendorId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.vendorId))\r\n    localStorage.setItem(KEYS.vendorId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllVendor() {\r\n    if (localStorage.getItem(KEYS.vendors) == null)\r\n        localStorage.setItem(KEYS.vendors, JSON.stringify([]))\r\n    let vendors = JSON.parse(localStorage.getItem(KEYS.vendors));\r\n    //map departmentID to department title\r\n    let departments = getDepartmentCollection();\r\n    return vendors.map(x => ({\r\n        ...x,\r\n        department: departments[x.departmentId - 1].title\r\n    }))\r\n}","import React, { useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../components/controls/Controls\";\r\nimport { useForm, Form } from '../components/useForm';\r\nimport * as vendorService from \"../services/vendorService\";\r\n\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    vendorName: '',\r\n    applicationName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    departmentId: '',\r\n    joiningDate: new Date(),\r\n    isPermanent: false,\r\n\r\n\r\n}\r\n\r\nexport default function VendorForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        // let temp = { ...errors }\r\n        let temp = {}\r\n        if ('vendorName' in fieldValues)\r\n            temp.vendorName = fieldValues.vendorName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        if ('departmentId' in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length !== 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n\r\n        <Form onSubmit={handleSubmit} >\r\n            <Grid container justify=\"center\">\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n\r\n                        name=\"vendorName\"\r\n                        label=\"Vendor Name\"\r\n                        value={values.vendorName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.vendorName}\r\n                    />\r\n                    <Controls.Input\r\n                        name=\"applicationName\"\r\n                        label=\"Application Name\"\r\n                        value={values.applicationName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.applicationName}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n\r\n                    <Controls.Select\r\n                        name=\"departmentId\"\r\n                        label=\"Department\"\r\n                        value={values.departmentId}\r\n                        onChange={handleInputChange}\r\n                        options={vendorService.getDepartmentCollection()}\r\n                        error={errors.departmentId}\r\n                    />\r\n                    <Controls.DatePicker\r\n                        name=\"joiningDate\"\r\n                        label=\"Joining Date\"\r\n                        value={values.joiningDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Checkbox\r\n                        name=\"isPermanent\"\r\n                        label=\"Accept\"\r\n                        value={values.isPermanent}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Form >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Paper, Card, Typography, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#fdfdff'\r\n    },\r\n    pageHeader: {\r\n        padding: theme.spacing(4),\r\n        display: 'flex',\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    pageIcon: {\r\n        display: 'inline-block',\r\n        padding: theme.spacing(2),\r\n        color: '#3c44b1'\r\n    },\r\n    pageTitle: {\r\n        paddingLeft: theme.spacing(4),\r\n        '& .MuiTypography-subtitle2': {\r\n            opacity: '0.6'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function PageHeader(props) {\r\n\r\n    const classes = useStyles();\r\n    const { title, subTitle, icon } = props;\r\n    return (\r\n        <Paper elevation={0} square className={classes.root}>\r\n            <div className={classes.pageHeader}>\r\n                <Card className={classes.pageIcon}>\r\n                    {icon}\r\n                </Card>\r\n                <div className={classes.pageTitle}>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        component=\"div\">\r\n                        {title}</Typography>\r\n                    <Typography\r\n                        variant=\"subtitle2\"\r\n                        component=\"div\">\r\n                        {subTitle}</Typography>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: theme.palette.primary.main,\r\n            backgroundColor: 'rgb(192, 192, 224)',\r\n\r\n        },\r\n        '& tbody td': {\r\n            fontWeight: '300',\r\n            padding: '4px'\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: '#fffbf2',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function useTable(records, headCells, filterFn) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = [3, 9, 15]\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\r\n    const [order, setOrder] = useState()\r\n    const [orderBy, setOrderBy] = useState()\r\n\r\n    const TblContainer = props => (\r\n        <Table className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const TblHead = props => {\r\n\r\n        const handleSortRequest = cellId => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(cellId)\r\n        }\r\n\r\n        return (<TableHead>\r\n            <TableRow>\r\n                {\r\n                    headCells.map(headCell => (\r\n                        <TableCell key={headCell.id}\r\n                            sortDirection={orderBy === headCell.id ? order : false}>\r\n                            {headCell.disableSorting ? headCell.label :\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\r\n                                    {headCell.label}\r\n                                </TableSortLabel>\r\n                            }\r\n                        </TableCell>))\r\n                }\r\n            </TableRow>\r\n        </TableHead>)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10))\r\n        setPage(0);\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records.length}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />)\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\r\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n    }\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(1)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={() => { setOpenPopup(false) }}>\r\n                        <CloseIcon />\r\n                    </Controls.ActionButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Snackbar, makeStyles } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        top: theme.spacing(9)\r\n    }\r\n}))\r\n\r\nexport default function Notification(props) {\r\n\r\n    const { notify, setNotify } = props;\r\n    const classes = useStyles()\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            autoHideDuration={3000}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            onClose={handleClose}>\r\n            <Alert\r\n                severity={notify.type}\r\n                onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Controls from \"../controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5),\r\n\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: 'blue',\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"No\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Yes\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport VendorForm from \"./VendorForm\";\r\nimport PageHeader from \"../components/PageHeader\";\r\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from \"../components/useTable\";\r\nimport * as vendorService from \"../services/vendorService\";\r\nimport Controls from \"../components/controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Popup from \"../components/Popup\";\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Notification from '../components/controls/Notification';\r\nimport ConfirmDialog from '../components/controls/ConfirmDialog';\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(0)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n    { id: 'id', label: 'ID' },\r\n    { id: 'vendorName', label: 'Vendor Name' },\r\n    { id: 'email', label: 'Email Address (Personal)' },\r\n    { id: 'mobile', label: 'Mobile Number' },\r\n    { id: 'department', label: 'Department' },\r\n    { id: 'actions', label: 'Actions', disableSorting: true }\r\n]\r\n\r\nexport default function VendorData() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [records, setRecords] = useState(vendorService.getAllVendor())\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value));\r\n            }\r\n        })\r\n    }\r\n\r\n    const addOrEdit = (vendor, resetForm) => {\r\n        if (vendor.id === 0)\r\n            vendorService.insertVendor(vendor)\r\n        else\r\n            vendorService.updateVendor(vendor)\r\n        resetForm()\r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        setRecords(vendorService.getAllVendor())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Submitted Successfully',\r\n            type: 'success'\r\n        })\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n\r\n        })\r\n        vendorService.deleteVendor(id);\r\n        setRecords(vendorService.getAllVendor())\r\n        setNotify({\r\n            isOpen: true,\r\n            message: 'Deleted Successfully',\r\n            type: 'error'\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                title=\"Software Hub Solutions\"\r\n                subTitle=\"Your Vision Our Future\"\r\n                icon={<ImportantDevicesIcon fontSize=\"large\" />}\r\n            />\r\n            <Paper className={classes.pageContent}>\r\n\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Data\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        className={classes.newButton}\r\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                    />\r\n\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody >\r\n\r\n                        {\r\n\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                            (<TableRow key={item.id}>\r\n                                <TableCell>{item.id}</TableCell>\r\n                                <TableCell>{item.vendorName}</TableCell>\r\n                                <TableCell>{item.email}</TableCell>\r\n                                <TableCell>{item.mobile}</TableCell>\r\n                                <TableCell>{item.department}</TableCell>\r\n                                <TableCell>\r\n                                    <Controls.ActionButton\r\n                                        color=\"primary\"\r\n                                        onClick={() => { openInPopup(item) }}>\r\n                                        <EditOutlinedIcon fontSize=\"small\" />\r\n                                    </Controls.ActionButton>\r\n                                    <Controls.ActionButton\r\n\r\n                                        color=\"secondary\"\r\n                                        onClick={() => {\r\n                                            setConfirmDialog({\r\n                                                isOpen: true,\r\n                                                title: 'Are you sure to delete this record?',\r\n                                                subTitle: \"You can't undo this operation\",\r\n                                                onConfirm: () => { onDelete(item.id) }\r\n                                            })\r\n                                        }}>\r\n                                        <CloseIcon fontSize=\"small\" />\r\n                                    </Controls.ActionButton>\r\n                                </TableCell>\r\n                            </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n\r\n            <Popup\r\n                title=\"Vendor Data\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <VendorForm\r\n                    recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit} />\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport SideBar from \"./components/SideBar\";\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Header from \"./components/Header\";\nimport VendorData from './pages/VendorData';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      root: {\n        transform: 'translateZ(0)'\n      }\n    }\n  },\n  props: {\n    MuiIconButton: {\n      disableRipple: true\n    }\n  }\n})\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '320px',\n    width: '100%'\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SideBar />\n      <div className={classes.appMain}>\n        <div>\n          <Header />\n          <VendorData />\n        </div>\n        <CssBaseline />\n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}